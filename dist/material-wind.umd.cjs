(function(r,a){typeof exports=="object"&&typeof module<"u"?module.exports=a(require("@material/material-color-utilities")):typeof define=="function"&&define.amd?define(["@material/material-color-utilities"],a):(r=typeof globalThis<"u"?globalThis:r||self,r.MaterialWind=a(r.MaterialColorUtilities))})(this,function(r){"use strict";function a(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var h={},F={};(function(x){Object.defineProperty(x,"__esModule",{value:!0}),Object.defineProperty(x,"default",{enumerable:!0,get:function(){return n}});function p(g,o){return{handler:g,config:o}}p.withOptions=function(g,o=()=>({})){const e=function(d){return{__options:d,handler:g(d),config:o(d)}};return e.__isOptionsFunction=!0,e.__pluginFunction=g,e.__configFunction=o,e};const n=p})(F),function(x){Object.defineProperty(x,"__esModule",{value:!0}),Object.defineProperty(x,"default",{enumerable:!0,get:function(){return g}});const p=n(F);function n(o){return o&&o.__esModule?o:{default:o}}const g=p.default}(h);let c=h;var f=(c.__esModule?c:{default:c}).default;const A=a(f),m=({addBase:x,theme:p})=>{x({body:{fontFamily:p("fontFamily.body"),backgroundColor:p("colors.light.background"),color:p("colors.light.onBackground"),fontSmoothing:"antialiased","&.dark":{backgroundColor:p("colors.dark.background"),color:p("colors.dark.onBackground")},"@media (prefers-color-scheme: dark)":{backgroundColor:p("colors.dark.background"),color:p("colors.dark.onBackground")}}})},s=x=>({".badge":{"--_size":"var(--size, 6px)","--_bg":`var(--bg, ${x("colors.light.error")})`,"--_color":`var(--color, ${x("colors.light.onError")})`,backgroundColor:"var(--_bg)",borderRadius:x("borderRadius.full"),display:"inline-block",color:"var(--_color)",height:"var(--_size)",width:"var(--_size)","&:not(:empty)":{"--size":"auto",fontSize:"11px",fontWeight:x("fontWeight.medium"),letterSpacing:"0.5pt",lineHeight:"16pt",padding:"0 6px"},"&.dark":{"--bg":x("colors.dark.error"),"--color":x("colors.dark.onError")},"@media (prefers-color-scheme: dark)":{"--bg":x("colors.dark.error"),"--color":x("colors.dark.onError")}}}),_=x=>({".typo":{...{"--_family":`var(--family, ${x("fontFamily.body")})`,"--_weight":`var(--weight, ${x("fontWeight.normal")})`,"--_size":"var(--size, 14pt)","--_spacing":"var(--spacing, 0.25pt)","--_line":"var(--line, 20pt)"},fontFamily:"var(--_family)",fontWeight:"var(--_weight)",fontSize:"var(--_size)",letterSpacing:"var(--_spacing)",lineHeight:"var(--_line)","&.lg":{"--size":"16pt","--spacing":"0.5pt","--line":"24pt"},"&.sm":{"--size":"12pt","--spacing":"0.4pt","--line":"16pt"},"&.display":{"--family":x("fontFamily.heading"),"--line":"52pt","--size":"45pt","--spacing":"0","&.lg":{"--line":"64pt","--size":"57pt","--spacing":"-0.25pt"},"&.sm":{"--line":"44pt","--size":"36pt"}},"&.headline":{"--family":x("fontFamily.heading"),"--line":"36pt","--size":"28pt","--spacing":"0","&.lg":{"--line":"40pt","--size":"32pt"},"&.sm":{"--line":"32pt","--size":"24pt"}},"&.title":{"--family":x("fontFamily.heading"),"--line":"24pt","--size":"16pt","--spacing":"0.15pt","--weight":x("fontWeight.medium"),"&.lg":{"--line":"28pt","--size":"22pt","--spacing":"0","--weight":x("fontWeight.normal")},"&.sm":{"--line":"20pt","--size":"14pt","--spacing":"0.1pt"}},"&.label":{"--line":"16pt","--size":"12pt","--spacing":"0.5pt","--weight":x("fontWeight.medium"),"&.lg":{"--line":"20pt","--size":"14pt","--spacing":"0.1pt"},"&.sm":{"--line":"16pt","--size":"11pt"}}}}),z=({addComponents:x,theme:p})=>{x({...s(p),..._(p)})};function S(){return x=>{m(x),z(x)}}const u={colorScheme:"content",mainColor:"#0CA678",fontFamily:{body:"",heading:""}},y=Array.from({length:17},(x,p)=>p*50).reduce((x,p)=>({...x,[p]:`${p}ms`}),{}),v={transitionDelay:y,transitionDuration:y,transitionTimingFunction:{emphasized:"cubic-bezier(0.2, 0, 0, 1)","emphasized-in":"cubic-bezier(0.3, 0, 0.8, 0.15)","emphasized-out":"cubic-bezier(0.05, 0.7, 0.1, 1)",standard:"cubic-bezier(0.2, 0, 0, 1)","standard-in":"cubic-bezier(0.3, 0, 1, 1)","standard-out":"cubic-bezier(0, 0, 0, 1)",legacy:"cubic-bezier(0.4, 0, 0.2, 1)","legacy-in":"cubic-bezier(0.4, 0, 1, 1)","legacy-out":"cubic-bezier(0, 0, 0.2, 1)"}},k=[["0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)","0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)","0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)","0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)","0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)","0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)","0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)","0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)","0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)","0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)","0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)","0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)","0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)","0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)","0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)","0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)","0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)","0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)","0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)","0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)","0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)","0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)","0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)","0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)"],["0px 2px 1px -1px rgba(255,255,255,0.2),0px 1px 1px 0px rgba(255,255,255,0.14),0px 1px 3px 0px rgba(255,255,255,0.12)","0px 3px 1px -2px rgba(255,255,255,0.2),0px 2px 2px 0px rgba(255,255,255,0.14),0px 1px 5px 0px rgba(255,255,255,0.12)","0px 3px 3px -2px rgba(255,255,255,0.2),0px 3px 4px 0px rgba(255,255,255,0.14),0px 1px 8px 0px rgba(255,255,255,0.12)","0px 2px 4px -1px rgba(255,255,255,0.2),0px 4px 5px 0px rgba(255,255,255,0.14),0px 1px 10px 0px rgba(255,255,255,0.12)","0px 3px 5px -1px rgba(255,255,255,0.2),0px 5px 8px 0px rgba(255,255,255,0.14),0px 1px 14px 0px rgba(255,255,255,0.12)","0px 3px 5px -1px rgba(255,255,255,0.2),0px 6px 10px 0px rgba(255,255,255,0.14),0px 1px 18px 0px rgba(255,255,255,0.12)","0px 4px 5px -2px rgba(255,255,255,0.2),0px 7px 10px 1px rgba(255,255,255,0.14),0px 2px 16px 1px rgba(255,255,255,0.12)","0px 5px 5px -3px rgba(255,255,255,0.2),0px 8px 10px 1px rgba(255,255,255,0.14),0px 3px 14px 2px rgba(255,255,255,0.12)","0px 5px 6px -3px rgba(255,255,255,0.2),0px 9px 12px 1px rgba(255,255,255,0.14),0px 3px 16px 2px rgba(255,255,255,0.12)","0px 6px 6px -3px rgba(255,255,255,0.2),0px 10px 14px 1px rgba(255,255,255,0.14),0px 4px 18px 3px rgba(255,255,255,0.12)","0px 6px 7px -4px rgba(255,255,255,0.2),0px 11px 15px 1px rgba(255,255,255,0.14),0px 4px 20px 3px rgba(255,255,255,0.12)","0px 7px 8px -4px rgba(255,255,255,0.2),0px 12px 17px 2px rgba(255,255,255,0.14),0px 5px 22px 4px rgba(255,255,255,0.12)","0px 7px 8px -4px rgba(255,255,255,0.2),0px 13px 19px 2px rgba(255,255,255,0.14),0px 5px 24px 4px rgba(255,255,255,0.12)","0px 7px 9px -4px rgba(255,255,255,0.2),0px 14px 21px 2px rgba(255,255,255,0.14),0px 5px 26px 4px rgba(255,255,255,0.12)","0px 8px 9px -5px rgba(255,255,255,0.2),0px 15px 22px 2px rgba(255,255,255,0.14),0px 6px 28px 5px rgba(255,255,255,0.12)","0px 8px 10px -5px rgba(255,255,255,0.2),0px 16px 24px 2px rgba(255,255,255,0.14),0px 6px 30px 5px rgba(255,255,255,0.12)","0px 8px 11px -5px rgba(255,255,255,0.2),0px 17px 26px 2px rgba(255,255,255,0.14),0px 6px 32px 5px rgba(255,255,255,0.12)","0px 9px 11px -5px rgba(255,255,255,0.2),0px 18px 28px 2px rgba(255,255,255,0.14),0px 7px 34px 6px rgba(255,255,255,0.12)","0px 9px 12px -6px rgba(255,255,255,0.2),0px 19px 29px 2px rgba(255,255,255,0.14),0px 7px 36px 6px rgba(255,255,255,0.12)","0px 10px 13px -6px rgba(255,255,255,0.2),0px 20px 31px 3px rgba(255,255,255,0.14),0px 8px 38px 7px rgba(255,255,255,0.12)","0px 10px 13px -6px rgba(255,255,255,0.2),0px 21px 33px 3px rgba(255,255,255,0.14),0px 8px 40px 7px rgba(255,255,255,0.12)","0px 10px 14px -6px rgba(255,255,255,0.2),0px 22px 35px 3px rgba(255,255,255,0.14),0px 8px 42px 7px rgba(255,255,255,0.12)","0px 11px 14px -7px rgba(255,255,255,0.2),0px 23px 36px 3px rgba(255,255,255,0.14),0px 9px 44px 8px rgba(255,255,255,0.12)","0px 11px 15px -7px rgba(255,255,255,0.2),0px 24px 38px 3px rgba(255,255,255,0.14),0px 9px 46px 8px rgba(255,255,255,0.12)"]].reduce((x,p,n)=>({...x,...p.reduce((g,o,e)=>({...g,[`elevate-${n===0?"light":"dark"}-${e+1}`]:o}),{})}),{}),P=x=>({background:r.hexFromArgb(x.n1.tone(6)),onBackground:r.hexFromArgb(x.n1.tone(90)),surface:r.hexFromArgb(x.n1.tone(6)),surfaceDim:r.hexFromArgb(x.n1.tone(6)),surfaceBright:r.hexFromArgb(x.n1.tone(24)),surfaceContainerLowest:r.hexFromArgb(x.n1.tone(4)),surfaceContainerLow:r.hexFromArgb(x.n1.tone(10)),surfaceContainer:r.hexFromArgb(x.n1.tone(12)),surfaceContainerHigh:r.hexFromArgb(x.n1.tone(17)),surfaceContainerHighest:r.hexFromArgb(x.n1.tone(22)),onSurface:r.hexFromArgb(x.n1.tone(90)),surfaceVariant:r.hexFromArgb(x.n2.tone(30)),onSurfaceVariant:r.hexFromArgb(x.n2.tone(80)),inverseSurface:r.hexFromArgb(x.n1.tone(90)),inverseOnSurface:r.hexFromArgb(x.n1.tone(20)),outline:r.hexFromArgb(x.n2.tone(60)),outlineVariant:r.hexFromArgb(x.n2.tone(30)),shadow:r.hexFromArgb(x.n1.tone(100)),scrim:r.hexFromArgb(x.n1.tone(0)),surfaceTint:r.hexFromArgb(x.a1.tone(80)),primary:r.hexFromArgb(x.a1.tone(80)),onPrimary:r.hexFromArgb(x.a1.tone(20)),primaryContainer:r.hexFromArgb(x.a1.tone(30)),onPrimaryContainer:r.hexFromArgb(x.a1.tone(90)),inversePrimary:r.hexFromArgb(x.a1.tone(40)),secondary:r.hexFromArgb(x.a2.tone(80)),onSecondary:r.hexFromArgb(x.a2.tone(20)),secondaryContainer:r.hexFromArgb(x.a2.tone(30)),onSecondaryContainer:r.hexFromArgb(x.a2.tone(90)),tertiary:r.hexFromArgb(x.a3.tone(80)),onTertiary:r.hexFromArgb(x.a3.tone(20)),tertiaryContainer:r.hexFromArgb(x.a3.tone(30)),onTertiaryContainer:r.hexFromArgb(x.a3.tone(90)),error:r.hexFromArgb(x.error.tone(80)),onError:r.hexFromArgb(x.error.tone(20)),errorContainer:r.hexFromArgb(x.error.tone(30)),onErrorContainer:r.hexFromArgb(x.error.tone(90)),primaryFixed:r.hexFromArgb(x.a1.tone(90)),primaryFixedDim:r.hexFromArgb(x.a1.tone(80)),onPrimaryFixed:r.hexFromArgb(x.a1.tone(10)),onPrimaryFixedVariant:r.hexFromArgb(x.a1.tone(30)),secondaryFixed:r.hexFromArgb(x.a2.tone(90)),secondaryFixedDim:r.hexFromArgb(x.a2.tone(80)),onSecondaryFixed:r.hexFromArgb(x.a2.tone(10)),onSecondaryFixedVariant:r.hexFromArgb(x.a2.tone(30)),tertiaryFixed:r.hexFromArgb(x.a3.tone(90)),tertiaryFixedDim:r.hexFromArgb(x.a3.tone(80)),onTertiaryFixed:r.hexFromArgb(x.a3.tone(10)),onTertiaryFixedVariant:r.hexFromArgb(x.a3.tone(30))}),w=x=>({background:r.hexFromArgb(x.n1.tone(98)),onBackground:r.hexFromArgb(x.n1.tone(10)),surface:r.hexFromArgb(x.n1.tone(98)),surfaceDim:r.hexFromArgb(x.n1.tone(87)),surfaceBright:r.hexFromArgb(x.n1.tone(98)),surfaceContainerLowest:r.hexFromArgb(x.n1.tone(100)),surfaceContainerLow:r.hexFromArgb(x.n1.tone(96)),surfaceContainer:r.hexFromArgb(x.n1.tone(94)),surfaceContainerHigh:r.hexFromArgb(x.n1.tone(92)),surfaceContainerHighest:r.hexFromArgb(x.n1.tone(90)),onSurface:r.hexFromArgb(x.n1.tone(10)),surfaceVariant:r.hexFromArgb(x.n2.tone(90)),onSurfaceVariant:r.hexFromArgb(x.n2.tone(30)),inverseSurface:r.hexFromArgb(x.n1.tone(20)),inverseOnSurface:r.hexFromArgb(x.n1.tone(95)),outline:r.hexFromArgb(x.n2.tone(50)),outlineVariant:r.hexFromArgb(x.n2.tone(80)),shadow:r.hexFromArgb(x.n1.tone(0)),scrim:r.hexFromArgb(x.n1.tone(0)),surfaceTint:r.hexFromArgb(x.a1.tone(40)),primary:r.hexFromArgb(x.a1.tone(40)),onPrimary:r.hexFromArgb(x.a1.tone(100)),primaryContainer:r.hexFromArgb(x.a1.tone(90)),onPrimaryContainer:r.hexFromArgb(x.a1.tone(10)),inversePrimary:r.hexFromArgb(x.a1.tone(80)),secondary:r.hexFromArgb(x.a2.tone(40)),onSecondary:r.hexFromArgb(x.a2.tone(100)),secondaryContainer:r.hexFromArgb(x.a2.tone(90)),onSecondaryContainer:r.hexFromArgb(x.a2.tone(10)),tertiary:r.hexFromArgb(x.a3.tone(40)),onTertiary:r.hexFromArgb(x.a3.tone(100)),tertiaryContainer:r.hexFromArgb(x.a3.tone(90)),onTertiaryContainer:r.hexFromArgb(x.a3.tone(10)),error:r.hexFromArgb(x.error.tone(40)),onError:r.hexFromArgb(x.error.tone(100)),errorContainer:r.hexFromArgb(x.error.tone(90)),onErrorContainer:r.hexFromArgb(x.error.tone(10)),primaryFixed:r.hexFromArgb(x.a1.tone(90)),primaryFixedDim:r.hexFromArgb(x.a1.tone(80)),onPrimaryFixed:r.hexFromArgb(x.a1.tone(10)),onPrimaryFixedVariant:r.hexFromArgb(x.a1.tone(30)),secondaryFixed:r.hexFromArgb(x.a2.tone(90)),secondaryFixedDim:r.hexFromArgb(x.a2.tone(80)),onSecondaryFixed:r.hexFromArgb(x.a2.tone(10)),onSecondaryFixedVariant:r.hexFromArgb(x.a2.tone(30)),tertiaryFixed:r.hexFromArgb(x.a3.tone(90)),tertiaryFixedDim:r.hexFromArgb(x.a3.tone(80)),onTertiaryFixed:r.hexFromArgb(x.a3.tone(10)),onTertiaryFixedVariant:r.hexFromArgb(x.a3.tone(30))}),T=x=>Array.from({length:101},(p,n)=>n).reduce((p,n)=>({primary:{...p.primary,[n]:r.hexFromArgb(x.a1.tone(n))},secondary:{...p.secondary,[n]:r.hexFromArgb(x.a2.tone(n))},tertiary:{...p.tertiary,[n]:r.hexFromArgb(x.a3.tone(n))},neutral:{...p.neutral,[n]:r.hexFromArgb(x.n1.tone(n))},neutralVariant:{...p.neutralVariant,[n]:r.hexFromArgb(x.n2.tone(n))},error:{...p.error,[n]:r.hexFromArgb(x.error.tone(n))}}),{primary:{},secondary:{},tertiary:{},neutral:{},neutralVariant:{},error:{}}),b=(x,p)=>{const n=new x(r.Hct.fromInt(r.argbFromHex(p)),!1),g=new x(r.Hct.fromInt(r.argbFromHex(p)),!0),o={light:{a1:n.primaryPalette,a2:n.secondaryPalette,a3:n.tertiaryPalette,n1:n.neutralPalette,n2:n.neutralVariantPalette,error:n.errorPalette},dark:{a1:g.primaryPalette,a2:g.secondaryPalette,a3:g.tertiaryPalette,n1:g.neutralPalette,n2:g.neutralVariantPalette,error:g.errorPalette}};return{...T(o.light),light:w(o.light),dark:P(o.dark)}},V={content:x=>b(r.SchemeContent,x),expressive:x=>b(r.SchemeExpressive,x),fidelity:x=>b(r.SchemeFidelity,x),monochrome:x=>b(r.SchemeMonochrome,x),neutral:x=>b(r.SchemeNeutral,x),tonalSpot:x=>b(r.SchemeTonalSpot,x),vibrant:x=>b(r.SchemeVibrant,x)};function D(x={}){return V[(x==null?void 0:x.colorScheme)??u.colorScheme](x.mainColor??u.mainColor)}const O=(x={})=>Object.entries(x??u.fontFamily).reduce((p,[n,g])=>({...p,[n]:[g,"system-ui","sans-serif"].filter(Boolean)}),{});function H(x){return{theme:{extend:{boxShadow:k,colors:D(x),fontFamily:O(x==null?void 0:x.fontFamily),...v}}}}return A.withOptions(S,H)});
